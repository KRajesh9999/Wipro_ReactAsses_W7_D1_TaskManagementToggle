{"ast":null,"code":"var _jsxFileName = \"E:\\\\WiproJuly\\\\React\\\\taskmanagement_toggle\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"To-do React \",\n    completed: false\n  }, {\n    id: 2,\n    text: \"Review Context API & Hooks\",\n    completed: true\n  }]);\n  const [newTask, setNewTask] = useState(\"\");\n  const addTask = () => {\n    if (newTask.trim() !== \"\") {\n      setTasks([...tasks, {\n        id: Date.now(),\n        text: newTask,\n        completed: false\n      }]);\n      setNewTask(\"\");\n    }\n  };\n  const toggleTask = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Management Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tagline\",\n        children: \"Organize your day Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control custom-input\",\n        placeholder: \"Add new task...\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success custom-btn\",\n        onClick: addTask,\n        children: \"\\u2795 Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Tasks: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: tasks.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }, this), \" | Completed:\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: tasks.filter(t => t.completed).length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-cards\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `task-card ${task.completed ? \"completed\" : \"\"}`,\n        onClick: () => toggleTask(task.id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GH5FzscAvGbMtZjDODZlamaL/xk=\");\n_c = App;\nexport default App;\n\n// import React, { createContext, useReducer, useContext, useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./App.css\"; // we'll add custom styles here\n\n// // ---------------- Context + Reducer ----------------\n// const TaskContext = createContext();\n\n// const ACTIONS = {\n//   ADD: \"ADD\",\n//   REMOVE: \"REMOVE\",\n//   TOGGLE: \"TOGGLE\"\n// };\n\n// function taskReducer(state, action) {\n//   switch (action.type) {\n//     case ACTIONS.ADD:\n//       return [...state, { id: Date.now(), text: action.payload, completed: false }];\n//     case ACTIONS.REMOVE:\n//       return state.filter(task => task.id !== action.payload);\n//     case ACTIONS.TOGGLE:\n//       return state.map(task =>\n//         task.id === action.payload ? { ...task, completed: !task.completed } : task\n//       );\n//     default:\n//       return state;\n//   }\n// }\n\n// function TaskProvider({ children }) {\n//   const [tasks, dispatch] = useReducer(taskReducer, [\n//     { id: 1, text: \"DotNet Project Task\", completed: false },\n//     { id: 2, text: \"React Application Project Task\", completed: true }\n//   ]);\n\n//   return (\n//     <TaskContext.Provider value={{ tasks, dispatch }}>\n//       {children}\n//     </TaskContext.Provider>\n//   );\n// }\n\n// // ---------------- Custom Hook ----------------\n// function useTasks() {\n//   const ctx = useContext(TaskContext);\n//   if (!ctx) throw new Error(\"useTasks must be used inside TaskProvider\");\n//   const { tasks, dispatch } = ctx;\n\n//   const add = text => dispatch({ type: ACTIONS.ADD, payload: text });\n//   const remove = id => dispatch({ type: ACTIONS.REMOVE, payload: id });\n//   const toggle = id => dispatch({ type: ACTIONS.TOGGLE, payload: id });\n\n//   return { tasks, add, remove, toggle };\n// }\n\n// // ---------------- Components ----------------\n// function AddTask() {\n//   const [text, setText] = useState(\"\");\n//   const { add } = useTasks();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     if (!text.trim()) return;\n//     add(text);\n//     setText(\"\");\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"d-flex gap-2 mb-3\">\n//       <input\n//         type=\"text\"\n//         className=\"form-control custom-input\"\n//         placeholder=\"Add new task...\"\n//         value={text}\n//         onChange={e => setText(e.target.value)}\n//       />\n//       <button type=\"submit\" className=\"btn btn-custom\">\n//         Add\n//       </button>\n//     </form>\n//   );\n// }\n\n// function TaskItem({ task }) {\n//   const { toggle, remove } = useTasks();\n//   return (\n//     <li\n//       className={`list-group-item task-item d-flex justify-content-between align-items-center ${\n//         task.completed ? \"completed\" : \"\"\n//       }`}\n//     >\n//       <div>\n//         <input\n//           type=\"checkbox\"\n//           className=\"form-check-input me-2\"\n//           checked={task.completed}\n//           onChange={() => toggle(task.id)}\n//         />\n//         <span>{task.text}</span>\n//       </div>\n//       <button className=\"btn btn-sm btn-outline-danger\" onClick={() => remove(task.id)}>\n//         Remove\n//       </button>\n//     </li>\n//   );\n// }\n\n// function TaskList() {\n//   const { tasks } = useTasks();\n//   const total = tasks.length;\n//   const completed = tasks.filter(t => t.completed).length;\n\n//   return (\n//     <div className=\"task-container\">\n//       <h5 className=\"mb-3\">\n//         Total Tasks:{\" \"}\n//         <span className=\"badge bg-secondary\">{total}</span> | Completed:{\" \"}\n//         <span className=\"badge bg-success\">{completed}</span>\n//       </h5>\n//       {tasks.length === 0 ? (\n//         <p className=\"text-muted\">No tasks yet. Add one above!</p>\n//       ) : (\n//         <div className=\"task-list-container\">\n//           <ul className=\"list-group\">\n//               {tasks.map(task => (\n//               <TaskItem key={task.id} task={task} />\n//             ))}\n//           </ul>\n//         </div>\n//         // <ul className=\"list-group custom-list\">\n//         //   {tasks.map(task => (\n//         //     <TaskItem key={task.id} task={task} />\n//         //   ))}\n//         // </ul>\n//       )}\n//     </div>\n//   );\n// }\n\n// // ---------------- Main App ----------------\n// function App() {\n//   return (\n//     <TaskProvider>\n//       <div className=\"App app-background\">\n//         <header className=\"App-header mb-4\">\n//           <h1 className=\"title\">!...Task Management Dashboard...!</h1>\n//         </header>\n//         <AddTask />\n//         <TaskList />\n//       </div>\n//     </TaskProvider>\n//   );\n// }\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","id","text","completed","newTask","setNewTask","addTask","trim","Date","now","toggleTask","map","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","filter","t","_c","$RefreshReg$"],"sources":["E:/WiproJuly/React/taskmanagement_toggle/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    { id: 1, text: \"To-do React \", completed: false },\n    { id: 2, text: \"Review Context API & Hooks\", completed: true },\n  ]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  const addTask = () => {\n    if (newTask.trim() !== \"\") {\n      setTasks([\n        ...tasks,\n        { id: Date.now(), text: newTask, completed: false },\n      ]);\n      setNewTask(\"\");\n    }\n  };\n\n  const toggleTask = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>Task Management Dashboard</h1>\n        <p className=\"tagline\">Organize your day Tasks</p>\n      </header>\n\n      <div className=\"task-input-container\">\n        <input\n          type=\"text\"\n          className=\"form-control custom-input\"\n          placeholder=\"Add new task...\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}\n        />\n        <button className=\"btn btn-success custom-btn\" onClick={addTask}>\n          ➕ Add Task\n        </button>\n      </div>\n\n      <div className=\"stats\">\n        <p>\n          Total Tasks: <b>{tasks.length}</b> | Completed:{\" \"}\n          <b>{tasks.filter((t) => t.completed).length}</b>\n        </p>\n      </div>\n\n      <div className=\"task-cards\">\n        {tasks.map((task) => (\n          <div\n            key={task.id}\n            className={`task-card ${task.completed ? \"completed\" : \"\"}`}\n            onClick={() => toggleTask(task.id)}\n          >\n            <p>{task.text}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n// import React, { createContext, useReducer, useContext, useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./App.css\"; // we'll add custom styles here\n\n// // ---------------- Context + Reducer ----------------\n// const TaskContext = createContext();\n\n// const ACTIONS = {\n//   ADD: \"ADD\",\n//   REMOVE: \"REMOVE\",\n//   TOGGLE: \"TOGGLE\"\n// };\n\n// function taskReducer(state, action) {\n//   switch (action.type) {\n//     case ACTIONS.ADD:\n//       return [...state, { id: Date.now(), text: action.payload, completed: false }];\n//     case ACTIONS.REMOVE:\n//       return state.filter(task => task.id !== action.payload);\n//     case ACTIONS.TOGGLE:\n//       return state.map(task =>\n//         task.id === action.payload ? { ...task, completed: !task.completed } : task\n//       );\n//     default:\n//       return state;\n//   }\n// }\n\n// function TaskProvider({ children }) {\n//   const [tasks, dispatch] = useReducer(taskReducer, [\n//     { id: 1, text: \"DotNet Project Task\", completed: false },\n//     { id: 2, text: \"React Application Project Task\", completed: true }\n//   ]);\n\n//   return (\n//     <TaskContext.Provider value={{ tasks, dispatch }}>\n//       {children}\n//     </TaskContext.Provider>\n//   );\n// }\n\n// // ---------------- Custom Hook ----------------\n// function useTasks() {\n//   const ctx = useContext(TaskContext);\n//   if (!ctx) throw new Error(\"useTasks must be used inside TaskProvider\");\n//   const { tasks, dispatch } = ctx;\n\n//   const add = text => dispatch({ type: ACTIONS.ADD, payload: text });\n//   const remove = id => dispatch({ type: ACTIONS.REMOVE, payload: id });\n//   const toggle = id => dispatch({ type: ACTIONS.TOGGLE, payload: id });\n\n//   return { tasks, add, remove, toggle };\n// }\n\n// // ---------------- Components ----------------\n// function AddTask() {\n//   const [text, setText] = useState(\"\");\n//   const { add } = useTasks();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     if (!text.trim()) return;\n//     add(text);\n//     setText(\"\");\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"d-flex gap-2 mb-3\">\n//       <input\n//         type=\"text\"\n//         className=\"form-control custom-input\"\n//         placeholder=\"Add new task...\"\n//         value={text}\n//         onChange={e => setText(e.target.value)}\n//       />\n//       <button type=\"submit\" className=\"btn btn-custom\">\n//         Add\n//       </button>\n//     </form>\n//   );\n// }\n\n// function TaskItem({ task }) {\n//   const { toggle, remove } = useTasks();\n//   return (\n//     <li\n//       className={`list-group-item task-item d-flex justify-content-between align-items-center ${\n//         task.completed ? \"completed\" : \"\"\n//       }`}\n//     >\n//       <div>\n//         <input\n//           type=\"checkbox\"\n//           className=\"form-check-input me-2\"\n//           checked={task.completed}\n//           onChange={() => toggle(task.id)}\n//         />\n//         <span>{task.text}</span>\n//       </div>\n//       <button className=\"btn btn-sm btn-outline-danger\" onClick={() => remove(task.id)}>\n//         Remove\n//       </button>\n//     </li>\n//   );\n// }\n\n// function TaskList() {\n//   const { tasks } = useTasks();\n//   const total = tasks.length;\n//   const completed = tasks.filter(t => t.completed).length;\n\n//   return (\n//     <div className=\"task-container\">\n//       <h5 className=\"mb-3\">\n//         Total Tasks:{\" \"}\n//         <span className=\"badge bg-secondary\">{total}</span> | Completed:{\" \"}\n//         <span className=\"badge bg-success\">{completed}</span>\n//       </h5>\n//       {tasks.length === 0 ? (\n//         <p className=\"text-muted\">No tasks yet. Add one above!</p>\n//       ) : (\n//         <div className=\"task-list-container\">\n//           <ul className=\"list-group\">\n//               {tasks.map(task => (\n//               <TaskItem key={task.id} task={task} />\n//             ))}\n//           </ul>\n//         </div>\n//         // <ul className=\"list-group custom-list\">\n//         //   {tasks.map(task => (\n//         //     <TaskItem key={task.id} task={task} />\n//         //   ))}\n//         // </ul>\n//       )}\n//     </div>\n//   );\n// }\n\n// // ---------------- Main App ----------------\n// function App() {\n//   return (\n//     <TaskProvider>\n//       <div className=\"App app-background\">\n//         <header className=\"App-header mb-4\">\n//           <h1 className=\"title\">!...Task Management Dashboard...!</h1>\n//         </header>\n//         <AddTask />\n//         <TaskList />\n//       </div>\n//     </TaskProvider>\n//   );\n// }\n// export default App;"],"mappings":"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5DsB,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAACE,IAAI,CAACX,EAAE,CAAE;QAAAa,QAAA,eAEnClB,OAAA;UAAAkB,QAAA,EAAIF,IAAI,CAACV;QAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAJbN,IAAI,CAACX,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAjEQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAmEZ,eAAeA,GAAG;;AAGlB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}